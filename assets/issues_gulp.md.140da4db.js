import{_ as s,c as a,o as l,a as n}from"./app.adeccbf4.js";const A=JSON.parse('{"title":"gulp","description":"","frontmatter":{},"headers":[{"level":2,"title":"当根目录下没有gulpfile.js文件时，执行gulp命令会报No gulpfile found错误","slug":"当根目录下没有gulpfile-js文件时-执行gulp命令会报no-gulpfile-found错误","link":"#当根目录下没有gulpfile-js文件时-执行gulp命令会报no-gulpfile-found错误","children":[]},{"level":2,"title":"watch 监听事件只执行了一次的问题","slug":"watch-监听事件只执行了一次的问题","link":"#watch-监听事件只执行了一次的问题","children":[]}],"relativePath":"issues/gulp.md"}'),p={name:"issues/gulp.md"},e=n(`<h1 id="gulp" tabindex="-1">gulp <a class="header-anchor" href="#gulp" aria-hidden="true">#</a></h1><h2 id="当根目录下没有gulpfile-js文件时-执行gulp命令会报no-gulpfile-found错误" tabindex="-1">当根目录下没有gulpfile.js文件时，执行gulp命令会报No gulpfile found错误 <a class="header-anchor" href="#当根目录下没有gulpfile-js文件时-执行gulp命令会报no-gulpfile-found错误" aria-hidden="true">#</a></h2><p>解决办法：<br> 执行gulp命令时指定gulpfile文件</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">gulp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">somefile.js</span></span>
<span class="line"></span></code></pre></div><h2 id="watch-监听事件只执行了一次的问题" tabindex="-1">watch 监听事件只执行了一次的问题 <a class="header-anchor" href="#watch-监听事件只执行了一次的问题" aria-hidden="true">#</a></h2><p>例子：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> watch </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">gulp</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> shell </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">shelljs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">build</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">shell</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pnpm build</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">watch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/**/*.ts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> build)</span></span>
<span class="line"></span></code></pre></div><p>当在终端执行gulp指令后，watch只监听了一次文件变化，后面就不再监听了</p><p>原因：<br> 没有执行回调函数告诉gulp任务执行完成，所以任务会一直处于未完成状态</p><p>解决方法： 在执行的任务里调用一下回调函数</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">build</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">cb</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">shell</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exec</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pnpm build</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">cb</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,11),o=[e];function t(c,r,i,y,D,F){return l(),a("div",null,o)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
