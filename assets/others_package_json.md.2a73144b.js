import{_ as a,c as e,o,a as t}from"./app.f6e6bc24.js";const _=JSON.parse('{"title":"关于 package.json","description":"","frontmatter":{},"headers":[{"level":2,"title":"在 package.json 中，可以使用多种方式来指定一个依赖的版本，以下是一些常见的方式","slug":"在-package-json-中-可以使用多种方式来指定一个依赖的版本-以下是一些常见的方式","link":"#在-package-json-中-可以使用多种方式来指定一个依赖的版本-以下是一些常见的方式","children":[]}],"relativePath":"others/package_json.md"}'),s={name:"others/package_json.md"},u=t('<h1 id="关于-package-json" tabindex="-1">关于 package.json <a class="header-anchor" href="#关于-package-json" aria-hidden="true">#</a></h1><h2 id="在-package-json-中-可以使用多种方式来指定一个依赖的版本-以下是一些常见的方式" tabindex="-1">在 package.json 中，可以使用多种方式来指定一个依赖的版本，以下是一些常见的方式 <a class="header-anchor" href="#在-package-json-中-可以使用多种方式来指定一个依赖的版本-以下是一些常见的方式" aria-hidden="true">#</a></h2><p>1.版本号：例如 &quot;admin-modules&quot;: &quot;1.2.3&quot;。这会安装指定版本的 admin-modules。</p><p>2.版本范围：例如 &quot;admin-modules&quot;: &quot;^1.2.3&quot;。这会安装 1.2.3 或更高版本的 admin-modules，但不会安装 2.0.0 或更高版本。^ 符号表示可以接受任何次要版本或补丁版本的更新，但不接受主要版本的更新。你也可以使用 ~ 符号来只接受补丁版本的更新，例如 &quot;admin-modules&quot;: &quot;~1.2.3&quot;。</p><p>3.最新版本：例如 &quot;admin-modules&quot;: &quot;latest&quot;。这会安装最新版本的 admin-modules。</p><p>4.Git URL：例如 &quot;admin-modules&quot;: &quot;git+ssh://git@gitlab.example.cn:web-front-end/admin-modules.git#v0.1.13&quot;。这会从指定的 Git 仓库中获取 admin-modules。你可以在 URL 后面加上 # 和一个标签、分支或提交的哈希值来指定版本。</p><p>5.GitHub 仓库：例如 &quot;admin-modules&quot;: &quot;username/repo#v0.1.13&quot;。这会从指定的 GitHub 仓库中获取 admin-modules。你可以在仓库名后面加上 # 和一个标签、分支或提交的哈希值来指定版本。</p><p>6.文件路径：例如 &quot;admin-modules&quot;: &quot;file:../admin-modules&quot;。这会从本地文件系统中的指定路径获取 admin-modules。</p><p>7.tarball URL：例如 &quot;admin-modules&quot;: &quot;<a href="https://example.com/admin-modules-1.2.3.tgz" target="_blank" rel="noreferrer">https://example.com/admin-modules-1.2.3.tgz</a>&quot;。这会从指定的 URL 下载一个 tarball，并从中安装 admin-modules。</p><p>8.tarball 文件：例如 &quot;admin-modules&quot;: &quot;file:../admin-modules-1.2.3.tgz&quot;。这会从本地文件系统中的指定路径获取一个 tarball，并从中安装 admin-modules</p>',10),d=[u];function n(m,i,l,p,r,c){return o(),e("div",null,d)}const h=a(s,[["render",n]]);export{_ as __pageData,h as default};
